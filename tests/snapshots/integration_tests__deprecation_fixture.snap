---
source: tests/integration_tests.rs
expression: output
---
# Crate: deprecation

Version: 2.0.0

Deprecation fixture for testing doccer

This crate contains deprecated items to validate
deprecation notice rendering functionality.

  /// A simple struct with deprecated field
  pub struct Config {

    /// Creates a new config
    pub fn new(api_key: String, timeout_ms: u32) -> Self

    DEPRECATED since 1.1.0
    /// Old method for setting timeout in seconds
    pub fn set_timeout(&mut self, seconds: u32)

    /// Sets the timeout in milliseconds
    pub fn set_timeout_ms(&mut self, ms: u32)
  }

  DEPRECATED since 1.3.0
  /// A deprecated enum that should be replaced
  pub enum Status {

    /// Everything is fine
    Ok

    /// Something went wrong
    Error
  }

  /// HTTP status codes
  pub enum HttpStatus {

    /// 200 OK
    Ok

    /// 400 Bad Request
    BadRequest

    /// 404 Not Found
    NotFound

    /// 500 Internal Server Error
    InternalError
  }

  /// A trait for handling deprecation
  pub trait Handler {

    /// Process a request
    fn process(&self) -> Result<(), String>

    DEPRECATED since 1.2.5
    /// Old way of handling errors
    fn handle_error(&self, error: &str)
  }

  /// Implementation of Handler
  pub struct DefaultHandler {
  }

  /// Implementation of Handler trait for DefaultHandler
  impl Handler for DefaultHandler {

    fn process(&self) -> Result<(), String>

    DEPRECATED since 1.2.5
    fn handle_error(&self, _error: &str)
  }

  DEPRECATED since 1.0.0
  /// A function that is no longer recommended
  pub fn connect(host: &str, port: u16) -> bool

  /// New connection function
  pub fn new_connect(host: &str, port: u16) -> Result<(), String>
