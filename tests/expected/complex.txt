# Crate: complex

Complex fixture for testing doccer

This crate contains more complex Rust constructs to validate
advanced parsing and rendering functionality.

  pub struct HttpClient { ... }
    /// A client for making HTTP requests

      pub fn new() -> Self
        /// Creates a new HTTP client

      pub fn request(&self, method: Method, url: String) -> Result<sub_module::Response, String>
        /// Makes an HTTP request

      pub fn with_timeout(self, seconds: u64) -> Self
        /// Sets a timeout for requests

  impl Protocol for HttpClient
    /// Implementation of Protocol trait for HttpClient

      type Error = HttpError

      pub fn connect(&mut self, url: String) -> Result<(), HttpError>
        /// Implement connect for HTTP

      pub fn disconnect(&mut self)
        /// Implement disconnect for HTTP

  pub enum Method { ... }
    /// HTTP request methods

    Get
      /// HTTP GET method

    Post
      /// HTTP POST method

    Put
      /// HTTP PUT method

    Delete
      /// HTTP DELETE method

    Custom(String)
      /// Custom HTTP method

  pub trait Protocol { ... }
    /// Protocol for network communications

    type Error: std::error::Error
      /// Associated error type

    pub fn connect(&mut self, url: String) -> Result<(), Self::Error>
      /// Connect to the endpoint

    pub fn disconnect(&mut self)
      /// Disconnect from the endpoint

  pub mod sub_module
    /// A submodule with additional types

    pub struct Response { ... }
      /// HTTP response

        pub fn is_success(&self) -> bool
          /// Checks if the response status is a success code

    pub struct Headers { ... }
      /// HTTP headers collection